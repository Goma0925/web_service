"""
Django settings for project_base project.

Generated by 'django-admin startproject' using Django 2.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os, sys
import django_heroku
import SecurityInfo

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
DOMAIN = "https://meetlocals.herokuapp.com"
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
TEMPLATE_DIR = os.path.join(BASE_DIR, "templates")
MEDIA_ROOT = os.path.join(BASE_DIR, "media")
MEDIA_URL = '/media/'
PLACEHOLDER_STORAGE_URL = "placeholders/"
PROFILE_IMAGE_URL = "profile_images/"
PROFILE_IMAGE_DIR = os.path.join(MEDIA_ROOT, "profile_images")
DEFAULT_PROFILE_IMG = "no_photo_icon.jpg"
HANGOUT_IMAGE_URL = "hangout_images/"
HANGOUT_IMAGE_DIR = os.path.join(MEDIA_ROOT, "hangout_images")
sys.path.insert(0, os.path.join(BASE_DIR, 'applications'))
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = SecurityInfo.SECRET_KEY

# SECURITY WARNING: don't run with debug turned on in production!
#DEBUG = True

ALLOWED_HOSTS = ["meetlocals.herokuapp.com",
                 "127.0.0.1"]

AUTH_USER_MODEL = "users.User"
AUTH_PROFILE_MODULE = 'users.UserProfile'
#ADDED WHEN BEGUGGING ADMIN
AUTHENTICATION_BACKENDS = (
        #'django.contrib.auth.backends.RemoteUserBackend',
        'django.contrib.auth.backends.ModelBackend',
)

DJANGO_NATIVE_INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

INSTALLED_MODULES = [
    "imagekit_cropper",
    "bootstrap4",
    "bootstrap_datepicker_plus",
    "taggit",
    'widget_tweaks',
]
TAGGIT_CASE_INSENSITIVE = True #Tags ignore capitalization.

PROJECT_APPS = [
    "applications.events.apps.EventsConfig",
    "applications.users.apps.CustomUsersConfig",
]

INSTALLED_APPS = DJANGO_NATIVE_INSTALLED_APPS + INSTALLED_MODULES + PROJECT_APPS

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'project_base.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATE_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                "applications.events.context_processors.debug_mode_flag",
                "applications.events.context_processors.search_form",
                "applications.events.context_processors.domain_name",

            ],
        },
    },
]

WSGI_APPLICATION = 'project_base.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': SecurityInfo.DB_NAME,
        'USER': SecurityInfo.DB_USER,
        'PASSWORD': SecurityInfo.DB_PASSWORD,
        'HOST': SecurityInfo.DB_HOST,
        'PORT': SecurityInfo.DB_PORT,
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/
STATIC_URL = '/static/'
#STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]


LOGIN_REDIRECT_URL = 'events:retrieve_eventboard'
LOGOUT_REDIRECT_URL = 'events:retrieve_eventboard'
#WhiteNoise static file caching storage settings. See: http://whitenoise.evans.io/en/stable/django.html#django-middleware
#STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

#Logging cofiguration on Heroku. Reference: https://chrxr.com/django-error-logging-configuration-heroku/
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': os.getenv('DJANGO_LOG_LEVEL', 'ERROR'),
        },
    },
}

#Deploy settings
DEBUG = True

try:
    from .local_settings import *
except ImportError:
    pass

if not DEBUG:
    import django_heroku
    django_heroku.settings(locals())
