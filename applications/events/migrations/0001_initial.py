# Generated by Django 2.1.3 on 2019-01-20 16:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0002_auto_20150616_2121'),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_id', models.CharField(default='XXXXXXXXXX', max_length=10, unique=True)),
                ('name', models.CharField(max_length=150)),
                ('start_time', models.DateTimeField(default=None)),
                ('end_time', models.DateTimeField(default=None)),
                ('image_storage_url', models.CharField(default='', max_length=160)),
                ('language', models.CharField(default='English', max_length=50)),
                ('description', models.CharField(max_length=160)),
                ('host_name', models.CharField(default='', max_length=160)),
                ('host', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_name', models.CharField(default='The place is not specified.', max_length=30)),
                ('address', models.CharField(default='The address is not specified.', max_length=120)),
            ],
        ),
        migrations.AddField(
            model_name='event',
            name='location',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='event', to='events.Location'),
        ),
        migrations.AddField(
            model_name='event',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
    ]
